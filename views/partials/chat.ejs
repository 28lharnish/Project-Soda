<style>
    #chat {

        display: flex;
        flex-direction: column;
        height: 85vh;
    }

    #messages-box {
        background-color: var(--mo);
        flex-grow: 1;
        overflow-y: auto;
        overflow-x: hidden;
    }

    #chat-ui {
        width: 100%;
        height: 100px;
        background-color: var(--modal-bg-color);
        padding: 10px;
    }

    #message-textbox {
        width: 80%;
        height: 100%;
        padding: 20px;
        resize: none;
        border-radius: 5px;
        font-size: 16px;
    }

    #send-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    .message {
        background-color: white;
        width: fit-content;
        padding: 10px;
        margin: 20px;
        border-radius: 20px;
        position: relative;
        left: 10px;
    }

    .message[you] {
        background-color: lightblue;
        position: relative;
        left: 90%;
        transform: translateX(-90%);
    }

    .message-pfp {
        width: 40px;
        height: 40px;
        border-radius: 50%;
    }

    /*.message-pfp[you] {
        display: none;
    }*/

    .message-timestamp[you] {
        display: none;
    }

    #people-btn {
        width: fit-content;
    }
</style>

<div id="chat">
    <% if (locals?.currentRoom) { %>
        <button id="people-btn" onclick="showModal('roomMembers')">Members</button>

        <div id="messages-box" onload="scrollToBottom()">
        <% currentRoom.messages.reverse() %>
        <% currentRoom.messages.forEach(message=> { %>
            <% let msgHtml=include('./message.ejs') %>
            <% let senderUsername=message.sender.username; %>
            <% let pfpFilePath=message.sender.pfpfilename; %>
            <% let messageText=message.text; %>
            <% let timestamp=new Date(message.timestamp).toLocaleString(); %>
            <% let isYou=message.sender.id===user.id; %>
            <% // I know. I hate it too but there is no time to find a better way and Ido not want to have it refresh everytime there is a new message%>
            <% if(!isYou) msgHtml=msgHtml.replace("you", "" ); %>
            <%- msgHtml.replace("PFPFILEPATH",pfpFilePath.replaceAll('\\', '\\\\')).replace("SENDERUSERNAME",isYou ? "You":senderUsername).replace("MESSAGETEXT",messageText).replace("TIMESTAMP",timestamp); %>
        <% }) %>
        </div>

        <div id="chat-ui">
            <!-- long line moment-->
            <textarea id="message-textbox" resizeable="false"
                maxlength="<%= cfg.messageRequirements.maxMessageLength %>"
                minlength="<%=cfg.messageRequirements.minMessageLength %>"></textarea>
            <button id="send-btn" type="submit" onclick="sendMessage()">Send</button>
        </div>

        <script src="/socket.io/socket.io.min.js"></script>

        <script>

            window.onload = scrollToBottom;

            const socket = io();
            let messageBox = document.getElementById('message-textbox');
            let messagesContainer = document.getElementById('messages-box');

            let sendPressed = false;

            let downKeys = [];
            //I don't even know
            downKeys['shift'] = false;

            document.addEventListener('keydown', function (e) {

                let key = e.key.toLowerCase();
                if(key === 'enter') e.preventDefault();
                downKeys[key] = true;
            });

            document.addEventListener('keyup', function (e) {
                let key = e.key.toLowerCase();
                downKeys[key] = false;
            });

            function keyDown(key){
                if(downKeys[key]){
                    return true;
                } else {
                    return false;
                }
            }

            setInterval(function(){
                if(document.activeElement !== messageBox){
                    return;
                }

                if(!keyDown("enter")){
                    sendPressed = false;
                }

                if(keyDown("enter") && keyDown("shift") && !sendPressed) {
                    messageBox.value += "\n"
                    console.log("NEW LINE");
                    sendPressed = true;
                } else if(keyDown("enter") && !sendPressed){
                    sendMessage();
                    console.log("SEND MESSAGE");
                    sendPressed = true;
                }

            }, 16);

            socket.on('message', (message) => {
                if (message.roomid == "<%= currentRoom.id %>") {
                    addMessage(message.text, message.timestamp, message.sender);
                }
            });

            function scrollToBottom() {
                let scrollHeight = messagesContainer.scrollHeight
                messagesContainer.scrollTop = scrollHeight;
            }

            function sendMessage() {
                let message = {
                    text: messageBox.value,
                    timestamp: new Date().toISOString(),
                    roomid: "<%= currentRoom?.id %>",
                    senderid: "<%= user.id %>"
                }

                console.log(message.text)

                messageBox.value = "";

                socket.emit('message', message);
            }

            function addMessage(text, timestamp, sender) {
                let msgHtml = `<%- include('./message.ejs'); %>`;
                let isYou = sender.id == "<%= user.id %>";
                let convertedTimestamp = new Date(timestamp).toLocaleString();
                //I hate this just as much as you do
                if (!isYou) msgHtml = msgHtml.replace("you", "");
                msgHtml = msgHtml.replace("PFPFILEPATH", sender.pfpfilename.replaceAll('\\', '\\\\')).replace("SENDERUSERNAME", isYou ? "You" : sender.username).replace("MESSAGETEXT", text.replaceAll("\n", "<br>")).replace("TIMESTAMP", convertedTimestamp);
                messagesContainer.innerHTML += msgHtml;
                scrollToBottom();
            }

        </script>

        <% } %>


</div>